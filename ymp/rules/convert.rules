"Generic file conversion rules"

from ymp import blast, gff

# FIXME: this doesn't work due to gff/blast hit conversion missing
rule blast7_to_gff:
    input:
        "{path}.blast7"
    output:
        "{path}.gff"
    run:
        with open(input[0], "r") as inf, open(output[0], "w") as outf:
            gfff = gff.writer(outf)
            for hit in blast.reader(inf):
                gfff.write(gff.Feature(hit))

rule blast7_to_csv:
    input:
        "{path}.blast7"
    output:
        "{path}.csv"
    run:
        with open(input[0]) as inf, open(output[0], "w") as outf:
            for hit in blast.reader(inf):
                print(repr(hit), repr(blast))


for fasta in "fa fna fasta".split():
    for fastp in "faa fastp".split():
        rule:
            message:
                "FASTA->FASTP {output}"
            input:
                "{path}."+fasta
            output:
                "{path}."+fastp
            priority:
                -50
            run:
                from ymp.nuc2aa import fasta_dna2aa
                with open(input[0], "r") as inf, open(output[0], "w") as outf:
                    fasta_dna2aa(inf, outf)

rule faa_fastp:
    message: "LN_S {output} -> {input}"
    input:
        "{path}.faa"
    output:
        "{path}.fastp"
    run:
        import os
        os.symlink(
            os.path.join(
                os.path.relpath(
                    os.path.dirname(input[0]),
                    os.path.dirname(output[0])
                ),
                os.path.basename(input[0])
            ),
            output[0]
        )

rule fasta_to_fastp_gz:
    message:
        "FASTA->FASTP {input}"
    input:
        "{path}.fasta.gz"
    output:
        "{path}.fastp.gz"
    run:
        from ymp.nuc2aa import fasta_dna2aa
        import gzip as gz
        with gz.open(input[0], "r") as inf, gz.open(output[0], "w") as outf:
            fasta_dna2aa(inf, outf)


rule temp_unzip:
    input: "{pathx}.fasta.gz"
    output: temp("{pathx}.fasta")
    threads: 8
    shell: "unpigz -k -p {threads} {input}"
