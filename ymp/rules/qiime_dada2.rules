rule qiime_dada2_presplit_samples:
    """Use qiime_dada2.py to pick OTUs"""
    message:
        "Denoising {input} with dada2, takes a folder containing one"
        " .fastq file per sample, outputs a directory"
    input:
        "{dir}/"
    output:
        dir = "{dir}.qd2/",
        dada2_biom = "{dir}.qd2/dada2.tsv",
        fasta = "{dir}.qd2/dada2.fasta",
        failures = "{dir}.qd2/pynast_aligned/dada2_failures.fasta",
        dada2_w_tax_no_failures = "{dir}.qd2/dada2_w_tax_no_pynast_failures.biom",
        dada2_tree = "{dir}.qd2/dada2.tre"
    log:
        "{dir}.qd2/capt_log.txt"
    threads:
        8
    conda:
        srcdir("dada2_qiime1.yml")
    params:
        skip_len=10
    shell: """
    qiime_dada2.py \
    -i {input} \
    -o {output.dir} \
    --skip_len {params.skip_len} \
    --procs {threads} \
    --skip_split \
    --force > {log} 2>&1
    """


rule remove_pynast_failures_from_dada2:
    """desc"""
    message:
        "removing pynast failures from {input.fasta}"
    input:
        fasta = "{dir}.qd2/dada2.fasta",
        failures = "{dir}.qd2/pynast_aligned/dada2_failures.fasta"
    output:
        filt_fasta = "{dir}.qd2/dada2_no_pynast_failures.fasta"
    conda:
        srcdir("dada2_qiime1.yml")
    shell: """
    remove_pynast_failures.py \
    -i {input.fasta} \
    -f {input.failures} \
    -o {output.filt_fasta}
    """


rule pick_97_closed_otus:
    """Pick closed OTUs"""
    message:
        "Closed reference OTU picking on {input.filt_fasta}"
    input:
        filt_fasta = "{dir}.qd2/dada2_no_pynast_failures.fasta"
    output:
        dir = "{dir}.c97/",
        otus = "{dir}.c97/uclust_ref_picked_otus/dada2_no_pynast_failures_otus.txt",
        failures = "{dir}.c97/uclust_ref_picked_otus/dada2_no_pynast_failures_failures.txt"
    conda:
        srcdir("dada2_qiime1.yml")
    params:
        similarity = "97",
        method = "uclust_ref"
    shell: """
    echo "pick_otus:similarity\t.{params.similarity}\npick_otus:otu_picking_method\t{params.method}" > qiime_params1.txt
    pick_closed_reference_otus.py -f \
    -i {input.filt_fasta} \
    -o {output.dir} \
    -p qiime_params1.txt
    rm qiime_params1.txt
    touch -c {output.otus}
    """

rule filter_and_pick_rep_set_closed:
    """"""
    message:
        "Getting failures and picking representative sequences from {input.filt_fasta}.c97"
    input:
        filt_fasta = "{dir}.qd2/dada2_no_pynast_failures.fasta",
        otus = "{dir}.c97/uclust_ref_picked_otus/dada2_no_pynast_failures_otus.txt",
        failures = "{dir}.c97/uclust_ref_picked_otus/dada2_no_pynast_failures_failures.txt"
    output:
        failures_fasta = "{dir}.c97/dada2_no_pynast_failures_failures.fasta",
        rep_set = "{dir}.c97/rep_set.fna"
    conda:
        srcdir("dada2_qiime1.yml")
    shell: """
    filter_fasta.py -f {input.filt_fasta} -s {input.failures} -o {output.failures_fasta}
    pick_rep_set.py -i {input.otus} -o {output.rep_set} -f {input.filt_fasta}
    """


rule pick_97_denovo_otus:
    """Pick de novo OTUs"""
    message:
        "Picking denovo OTUs on {input.failures_fasta}"
    input:
        failures_fasta = "{dir}.c97/dada2_no_pynast_failures_failures.fasta"
    output:
        dir = "{dir}.d97",
        rep_set = "{dir}.d97/rep_set.fna",
        otus = "{dir}.d97/dada2_no_pynast_failures_failures_otus.txt"
    conda:
        srcdir("dada2_qiime1.yml")
    shell: """
    pick_otus.py -i {input.failures_fasta} -s .97 -o {output.dir}
    pick_rep_set.py -i {output.otus} -o {output.rep_set} -f {input.failures_fasta}
    """


rule make_97_open_otu_table:
    """Join closed and de novo OTUs"""
    message:
        "Collating {input.closed_otu_map} and {input.denovo_otu_map} to make open reference OTU table"
    input:
        dada2_otu_table = "{dir}.qd2/dada2.tsv",
        closed_rep_set = "{dir}.c97/rep_set.fna",
        denovo_rep_set = "{dir}.d97/rep_set.fna",
        closed_otu_map = "{dir}.c97/dada2_no_pynast_failures_otus.txt",
        denovo_otu_map = "{dir}.d97/dada2_no_pynast_failures_failures_otus.txt"
    output:
        otu_map = "{dir}.o97/final_otu_map.txt",
        rep_set = "{dir}.o97/rep_set.fna",
        otu_table = "{dir}.o97/dada2_otu_table.biom"
    conda:
        srcdir("dada2_qiime1.yml")
    shell: """
    cat {input.closed_rep_set} {input.denovo_rep_set} > {output.rep_set}
    cat {input.closed_otu_map} {input.denovo_otu_map} > {output.otu_map}
    dada2_to_otu_table.py -i {input.dada2_otu_table} -m {output.otu_map} -o {output.otu_table}
    """


rule assign_taxonomy_open_otus:
    """"""
    message:
        "Assigning taxonomy to {input.rep_set} and adding to {input.otu_table}"
    input:
        rep_set = "{dir}.o97/rep_set.fna",
        otu_table = "{dir}.o97/dada2_otu_table.biom"
    output:
        taxonomy_dir = "{dir}.o97/assigned_taxonomy",
        otu_table_w_tax = "{dir}.o97/dada2_otu_table_w_tax.biom"
    conda:
        srcdir("dada2_qiime1.yml")
    shell: """
    assign_taxonomy.py -i {input.rep_set} -o {output.taxonomy_dir}
    biom add-metadata -i {input.otu_table} --observation-metadata-fp {output.taxonomy_dir}/rep_set_tax_assignments.txt -o {output.otu_table_w_tax} --sc-separated taxonomy --observation-header OTUID,taxonomy
    """


rule make_tree_filter_open_otu_table:
    """"""
    message:
        "Making {output.tree} and filtering pynast failures from {input.otu_table_w_tax}"
    input:
        rep_set = "{dir}.o97/rep_set.fna",
        otu_table_w_tax = "{dir}.o97/dada2_otu_table_w_tax.biom"
    output:
        rep_set_aligned = "{dir}.o97/pynast_aligned",
        rep_set_aligned_filtered = "{dir}.o97/pynast_aligned/rep_set_aligned_pfiltered.fasta",
        tree = "{dir}.o97/rep_set.tre",
        otu_table_w_tax_no_pynast_failures = "{dir}.o97/dada2_otu_table_w_tax_no_pynast_failures.biom"
    conda:
        srcdir("dada2_qiime1.yml")
    shell: """
    align_seqs.py -i {input.rep_set} -o {output.rep_set_aligned}
    filter_alignment.py -i {output.rep_set_aligned}/rep_set_aligned.fasta -o {output.rep_set_aligned}
    make_phylogeny.py -i {output.rep_set_aligned}/rep_set_aligned_pfiltered.fasta -o {output.tree}
    remove_pynast_failures.py -f {output.rep_set_aligned}/rep_set_failures.fasta -i {input.otu_table_w_tax} -o {output.otu_table_w_tax_no_pynast_failures}
    """


rule get_important_files_only:
    """"""
    message:
        ""
    input:
        dada2_biom = "{dir}.qd2/dada2_w_tax_no_pynast_failures.biom",
        dada2_tree = "{dir}.qd2/dada2.tre",
        dada2_rep_set = "{dir}.qd2/dada2_no_pynast_failures.fasta",
        dada2w97_biom = "{dir}.o97/dada2_otu_table_w_tax_no_pynast_failures.biom",
        dada2w97_tree = "{dir}.o97/rep_set.tre",
        dada2w97_rep_set = "{dir}.o97/rep_set.fna"
    output:
        dada2_biom = "{dir}.corediv/dada2.biom",
        dada2_tree = "{dir}.corediv/dada2.tre",
        dada2_rep_set = "{dir}.corediv/dada2.fasta",
        dada2w97_biom = "{dir}.corediv/dada2w97.biom",
        dada2w97_tree = "{dir}.corediv/dada2w97.tre",
        dada2w97_rep_set = "{dir}.corediv/dada2w97.fasta"
    shell: """
    cp {input.dada2_biom} {output.dada2_biom}
    cp {input.dada2_tree} {output.dada2_tree}
    cp {input.dada2_rep_set} {output.dada2_rep_set}
    cp {input.dada2w97_biom} {output.dada2w97_biom}
    cp {input.dada2w97_tree} {output.dada2w97_tree}
    cp {input.dada2w97_rep_set} {output.dada2w97_rep_set}
    """
