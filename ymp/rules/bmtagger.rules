rule bmtagger_bitmask:
    message: "Bmtool indexing {input}"
    input:   "{path}.fasta"
    output:  "{path}.bitmask"
    log:     "{path}.bitmask.log"
    threads: 1
    params:  wordsize = 18,
             mem = icfg.mem("16g")
    conda:   "bmtagger.yml"
    shell: """
    bmtool \
        --fasta-file={input} \
        --output-file={output} \
        --word-size={params.wordsize} \
        > {log} 2>&1
    """
    # --compress fails with small references (segfault in bmfilter)


rule bmtagger_index:
    message: "Srcprism indexing {input}"
    input:   "{path}.fasta.gz"
    output:  touch("{path}.srprism")
    log:     "{path}.srprism.log"
    threads: 1
    params:  basename="{path}.srprism",
             mem = icfg.mem("8g")
    conda:   "bmtagger.yml"
    shell: """
    srprism mkindex \
        --input {input} \
        --output {output} \
        --memory {params.mem} \
        > {log} 2>&1
    """

ruleorder: gunzip > bmtagger_find
rule bmtagger_find:
    message: "Bmtagger find {wildcards.reference} {wildcards.dir}/{wildcards.sample}"
    input:   "{dir}/{sample}.{:pairnames:}.fq",
             bitmask = "{:dir.references:}/{reference}.bitmask",
             srprism = "{:dir.references:}/{reference}.srprism",
             tmpdir = ancient(icfg.dir.tmp)
    output:  temp("{dir}.bmtaggerRM{reference}/{sample}.txt"),
             "{dir}.bmtaggerRM{reference}/{sample}.txt.gz"
    log:     "{dir}.bmtaggerRM{reference}/{sample}.bmtagger.log"
    threads: 1
    params:  mem = icfg.mem("8g")
    conda:   "bmtagger.yml"
    shell: """
    bmtagger.sh \
        -b {input.bitmask} \
        -x {input.srprism} \
        -q 1 \
        -1 {input[0]} \
        -2 {input[1]} \
        -T {input.tmpdir} \
        -o {output[0]} \
        > {log} 2>&1
    gzip {output[0]} -c > {output[0]}.gz
    """


rule bmtagger_filter:
    message: "Bmtagger removing {wildcards.reference} {wildcards.dir}/{wildcards.sample}"
    wildcard_constraints:
        filt = "(RM|KP)"
    input:   "{dir}/{sample}.{pairsuff}.fq",
             idlist = "{dir}.bmtaggerRM{reference}/{sample}.txt"
    output:  "{dir}.bmtagger{filt}{reference}/{sample}.{pairsuff}.fq.gz"
    log:     "{dir}.bmtagger{filt}{reference}/{sample}.{pairsuff}.extract.log"
    threads: 8
    params:  filt = lambda wc: "-remove" if wc.filt == "RM" else "-keep",
             mem = icfg.mem("8g")
    conda:   "bmtagger.yml"
    shell: """
    extract_fullseq \
        {input.idlist} \
        {params.filt} \
        -fastq \
        -mate1 {input[0]} | pigz -p {threads} -9 > {output}  2>{log}
    """

