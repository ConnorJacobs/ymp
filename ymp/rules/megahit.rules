rule megahit:
    """
    Megahit assembly rule. Supports reads.by_COLUMN.mhc/complete as target for
    by group co-assembly.
    """
    message:
        "(Co-)Assembling {wildcards.target} with megahit"
    input:
        r1 = "{dir}/{: sources :}.{: pairnames[0] :}.fq.gz",
        r2 = "{dir}/{: sources :}.{: pairnames[1] :}.fq.gz",
        tmpdir = ancient(icfg.dir.tmp)
    output:
        fasta = "{dir}{by}.mhc/{target}.contigs.fasta.gz",
        fastg = "{dir}{by}.mhc/{target}.contigs.fastg.gz"
    log:
        "{dir}{by}.mhc/{target}.log.gz"
    params:
        workdir = "{dir}{by}.mhc/{target}/",
        preset  = "meta-sensitive",
        r1 = lambda wc, input: ",".join([input.r1]
                                        if isinstance(input.r1, str) else input.r1),
        r2 = lambda wc, input: ",".join([input.r2]
                                        if isinstance(input.r2, str) else input.r2),
        mem = icfg.mem("500g")
    threads:
        32
    conda:
        "megahit.yml"
    shell: """
    # iff there is an existing opts.txt with an existing megahit temp dir,
    # then we can continue an existing run
    MHTMP=$(sed -n '/MEGAHIT_TEMP_DIR:/ s/.*:\s*//p' "{params.workdir}/opts.txt" 2>/dev/null||true)
    CONTINUE=""
    if [ -e "$MHTMP" ]; then
        echo "YMP: Trying to restart aborted assembly"
        CONTINUE="--continue"
    else
        rm -rf "{params.workdir}"
    fi

    megahit \
      -1 {params.r1} -2 {params.r2} \
      --presets {params.preset} \
      --num-cpu-threads {threads} \
      --out-dir {params.workdir} \
      --tmp-dir {input.tmpdir} \
      $CONTINUE

    # abort if not finished
    [ -e {params.workdir}/done ] || exit 1

    # output zipped contigs
    pigz -p {threads} -9 -c {params.workdir}/final.contigs.fa > {output.fasta}

    # output the zipped log
    cat {params.workdir}/{{opts.txt,log}} |\
    pigz -p {threads} -9 -c > {log}

    # determine largest K used
    MAXK=`tac {params.workdir}/log | sed -nr 's/^---.*k = ([0-9]{{2,3}}) ---/\\1/p;' | head -n1`

    # output the zipped fastg
    megahit_toolkit contig2fastg $MAXK \
    {params.workdir}/intermediate_contigs/k${{MAXK}}.contigs.fa |\
    pigz -p {threads} -9 -c > {output.fastg}

    # remove intermediate contigs
    #rm -rf {params.workdir}
    """

