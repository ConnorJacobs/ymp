rule metacov:
    """
    Compute coverage for a set of regions. Needs:
    - csv with regions
      - sequence_id, start, end
    - bam with aligned reads
    """
    message:
        "Calculating coverage"
    input:
        csv = "{dir}.{genefind}/{target}.contigs.{query}.{gene}.csv",
        bam = "{dir}.{mapper}/{target}.contigs.{source}.sorted.bam",
        bai = "{dir}.{mapper}/{target}.contigs.{source}.sorted.bam.bai"
    output:
        "{dir}.{mapper}.cov/{target}.contigs.{source}.{genefind}.{query}.{gene}.csv"
    log:
        "{dir}.{mapper}.cov/{target}.contigs.{source}.{genefind}.{query}.{gene}.log"
    shell:"""
    metacov {input.bam} {input.csv} {output}.tmp >{log} 2>&1
    sed -e '1 s/^/target,source,/' \
        -e '2~1 s/^/{wildcards.target},{wildcards.source},/' \
        {output}.tmp > {output}
    rm {output}.tmp
    """


localrules: blast7_coverage_join_sources
rule metacov_join_sources:
    message:
        "Merging coverage"
    input:
        csv="{dir}.cov/{target}.contigs.{: sources :}.{genefind}.{query}.{gene}.csv"
    output:
        csv=temp("{dir}.cov/{target}.contigs.{genefind}.{query}.{gene}.csv")
    shell: """
    if test "$(echo {input.csv} | wc -w)" -eq 1; then
       cp {input.csv} {output.csv}
    else
        (
            head -n1 {input.csv[0]};
            tail -n +2 -q {input.csv};
        ) > {output.csv}
    fi
    """


localrules: blast7_coverage_join_targets
rule metacov_join_targets:
    message:
        "Merging coverage"
    input:
        csv="{dir}.cov/{:targets:}.contigs.{genefind}.{query}.{gene}.csv"
    output:
        csv="{dir}.cov/{genefind}.{query}.{gene}.csv"
    shell: """
    if test "$(echo {input.csv} | wc -w)" -eq 1; then
       cp {input.csv} {output.csv}
    else
        (
            head -n1 {input.csv[0]};
            tail -n +2 -q {input.csv};
        ) > {output.csv}
    fi
    """
