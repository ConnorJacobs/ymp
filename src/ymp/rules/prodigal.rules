Env(name="prodigal", base="bioconda", packages="prodigal")

with Stage("prodigal") as S:
    S.doc("""
    Call genes using prodigal
    """)

    rule prodigal:
        """Predict genes using prodigal"""
        message: "Gene prediction (Prodigal): {input}"
        input:         "{:prev:}/{sample}.contigs.fasta.gz"
        output:  gff = "{:this:}/{sample}.prodigal.gff.gz",
                 fna = "{:this:}/{sample}.prodigal.fna.gz",
                 faa = "{:this:}/{sample}.prodigal.faa.gz",
        log:           "{:this:}/{sample}.prodigal.log"
        threads: 1
        conda:   "prodigal"
        shell: """
        zcat {input} | \
        prodigal -p meta \
            -f gff -o >(gzip -c9 > {output.gff}) \
            -d >(gzip -c9 > {output.fna}) \
            -a >(gzip -c9 > {output.faa}) \
          >{log} 2>&1
        gzip -9 {log}
        """

    rule prodigal_all:
        message:
            "Prodigal: finished ({output})"
        input:
            "{:this:}/{:targets:}.prodigal.gff.gz"
        output:
            touch("{:this:}/all")
